version: 2.1
jobs:
    install_dependencies:
        docker:
            - image: circleci/python:3.7.4
        steps:
            - checkout
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "requirements.txt" }}
            - run:
                name: Install dependencies
                command: |
                    python -m venv venv
                    . venv/bin/activate
                    pip install -r requirements.txt
            - save_cache:
                key: v1-dependencies-{{ checksum "requirements.txt" }}
                paths:
                    - "venv"

    test_code:
        docker:
            - image: circleci/python:3.7.4
        steps:
            - checkout
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "requirements.txt" }}
            - run:
                name: Run script main.py
                command: |
                    . venv/bin/activate
                    python main.py
                no_output_timeout: 1h

            - store_artifacts:
                path: /results
    ramav2:
        docker:
            - image: circleci/python:3.7.4
        resource_class: large
        steps:
            - checkout
            - attach_workspace:
                at: ~/project
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "requirements.txt" }}
            - run:
                name: Run main.py
                command: |
                    . venv/bin/activate
                    python main.py
                no_output_timeout: 1h
            - persist_to_workspace:
                root: ~/project
                paths:
                    - "results/decpv2.json"
    sendv2:
        docker:
            - image: 139bercy/decp-rama
        steps:
            - attach_workspace:
                at: ~/project
            - run:
                name: Transferts des donn√©es vers data eco
                command: |
                    lftp -u ${DEPLOY_USER}:${DEPLOY_PASSWORD} ${DEPLOY_HOST} -e "set ftp:ssl-force true ; set ssl:verify-certificate false; cd decp ; put results/decpv2.json ; quit"
    upload_api:
        docker:
            - image: 139bercy/decp-rama
        environment:
            - API_KEY: eyJhbGciOiJIUzUxMiJ9.eyJ1c2VyIjoiNjQzNjY4YmViMjQ1NGU2MTlmNTYwNjc2IiwidGltZSI6MTY4MTI5MzU1MS4xNzA2ODM5fQ.18S9Z0MQ4GQcTiLTZz2Q2sc_3eiR4gHZqZqau6uqPRViW6cp1G0E9Dw0Dbou9OQntvOKOgsSotcVWWgeFlfkFg
        steps:
            - attach_workspace:
                at: ~/project
            - run:
                name: Upload data to data.gouv.fr API
                command: |
                    curl -H "X-API-KEY: $API_KEY" 
                    -X PUT 
                    -T ~/project/results/decp.json "https://www.data.gouv.fr/api/1/datasets/5cd57bf68b4c4179299eb0e9/resources/ba400316-34fb-4d12-aad2-ac7cbe8b517a/upload/"


workflows:
  version: 2
  main:
    jobs:
      - install_dependencies
      - ramav2:
            context:
                - decp-rama-context
            requires:
                - install_dependencies
      - sendv2:
            requires:
                - ramav2
      - upload_api:
            requires:
                - ramav2
      
